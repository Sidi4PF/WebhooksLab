const express = require('express');
const bodyParser = require('body-parser');
const crypto = require('crypto');
const { exec } = require('child_process');
const simpleGit = require('simple-git');

const app = express();
const PORT = 3000;

const GITHUB_SECRET = 'secret';

const REPO_DIR = 'https://github.com/Sidi4PF/WebhooksLab.git';

app.use(bodyParser.json());

function verifyGitHubSignature(req, res, buf) {
    const signature = `sha256=${crypto
        .createHmac('sha256', GITHUB_SECRET)
        .update(buf)
        .digest('hex')}`;
    const isSignatureValid = req.headers['x-hub-signature-256'] === signature;

    if (!isSignatureValid) {
        res.status(401).send('Unauthorized');
        throw new Error('Unauthorized');
    }
}

app.post('/webhook', (req, res) => {
    if (req.headers['x-github-event'] === 'push' && req.body.ref === 'refs/heads/main') {
        console.log('Push event received');

        const git = simpleGit(REPO_DIR);
        
        git.pull('origin', 'main', (err, update) => {
            if (err) {
                console.error('Failed to pull latest code:', err);
                return res.status(500).send('Internal Server Error');
            } 

            if (update && update.summary.changes) {
                console.log('Repository updated:', update);
                
                // Replace with your build command
                exec('npm install && npm run build', { cwd: REPO_DIR }, (err, stdout, stderr) => {
                    if (er r) {
                        console.error('Build failed:', err);
                        return res.status(500).send('Internal Server Error');
                    }

                    console.log('Build output:', stdout);
                    console.error('Build errors:', stderr);
                    res.status(200).send('OK');
                });
            } else {
                res.status(200).send('No changes detected');
            }
        });
    } else {
        res.status(200).send('Not a push event to main branch');
    }
});

app.use((req, res, next) => {
    bodyParser.json({ verify: verifyGitHubSignature })(req, res, next);
});

app.listen(PORT, () => {
    console.log(`Server is listening on port ${PORT}`);
});
